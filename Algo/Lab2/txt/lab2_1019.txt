Будем поддерживать раскрашенные интервалы в std::map<int, Interval> (красно-черное дерево), где ключ - левая граница интервала, значение - структура, хранящая правую границу интервала и цвет (w = false, b = true).

struct Interval {
    int right;
    bool isBlack;
};

сначала имеем один интервал: (0, 10^9, w) белый. При перекрашиваниях будем разбивать его на части.
например, после запроса: "20 30 b" в map будут интервалы
(0, 20, w)
(20, 30, b)
(30, 10^9, w)

если после разбиения два и более подряд идущие интервалы имеют один цвет, то они сливаются в один.

В конце линейным поиском проходимся по всем оставшимся интервалам и определяем белый наибольшей длины.